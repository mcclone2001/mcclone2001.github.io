<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>El blog de Iván Quiñones</title>
    <link>https://mcclone2001.github.io/blog/</link>
    <description>Recent content on El blog de Iván Quiñones</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-mx</language>
    <lastBuildDate>Sun, 10 Mar 2019 21:12:04 -0600</lastBuildDate>
    
	<atom:link href="https://mcclone2001.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker Cheatsheet</title>
      <link>https://mcclone2001.github.io/blog/posts/docker-cheatsheet/</link>
      <pubDate>Sun, 10 Mar 2019 21:12:04 -0600</pubDate>
      
      <guid>https://mcclone2001.github.io/blog/posts/docker-cheatsheet/</guid>
      <description>Construir una imagen docker build &amp;lt;Ubicación el archivo Dockerfile&amp;gt; -t &amp;lt;nombre de imagen&amp;gt;  Instalar un contenedor --name Para indicar el nombre del contenedor
-d Para ejecutar como demonio
-it para disponer de entrada estandar y TTY
-v &amp;lt;ruta local&amp;gt;:&amp;lt;ruta en el contenedor&amp;gt; para compartir una carpeta entre el host y el contenedor
-p &amp;lt;puerto local&amp;gt;:&amp;lt;puerto en el contenedor&amp;gt; para redirigir el tráfico de un puerto en el host al contenedor</description>
    </item>
    
    <item>
      <title>Como crear un contenedor Docker en Windows</title>
      <link>https://mcclone2001.github.io/blog/posts/tutorial-creacion-de-imagen-en-docker/</link>
      <pubDate>Wed, 06 Mar 2019 21:12:04 -0600</pubDate>
      
      <guid>https://mcclone2001.github.io/blog/posts/tutorial-creacion-de-imagen-en-docker/</guid>
      <description>Docker es una plataforma de virtualización que te permite distribuir despliegues/servicios/aplicaciones en contenedores, dichos contenedores sin instancias de imágenes, y estas imágenes son instalaciones mínimas que te permiten ejecutar infinidad de aplicaciones.
La mayoría de los contenedores son distribuciones linux como Alpine, diseñadas para ser compactas y veloces. Su principal ventaja sobre máquinas virtuales es que docker procura virtualizar directamente sobre la arquitectura nativa (Hyper-V) haciendo que los contenedores sean sumamente ligeros.</description>
    </item>
    
    <item>
      <title>The Twelve Factor App</title>
      <link>https://mcclone2001.github.io/blog/posts/ivanq-explora-the-twelve-factor-app/</link>
      <pubDate>Fri, 01 Mar 2019 21:12:04 -0600</pubDate>
      
      <guid>https://mcclone2001.github.io/blog/posts/ivanq-explora-the-twelve-factor-app/</guid>
      <description>&amp;ldquo;The twelve-factor app&amp;rdquo; es una metodología para construir aplicaciones SaaS propuesta por Adam Wiggins co-fundador de Heroku, a finales del 2011.
Esta publicación es un resumen de los 12 factores, y es el inicio de una serie de 13 artículos dirigidos a analizar cada uno de estos puntos.
Si bien ha recibido controversia, dado que los 12 factores se ajustan casi exclusivamente a los flujos de trabajo con Heroku, el manifiesto me ha parecido interesante dado que varios de los puntos están evidentemente inspirados por los movimientos de DevOps y la arquitectura de microservicios, pero principalmente por ser una síntesis de los 6 años de experiencia de Wiggins como CTO de una de las primeras plataformas en la nube.</description>
    </item>
    
  </channel>
</rss>